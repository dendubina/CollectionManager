@using CollectionsManager.DAL.Constants
@model CollectionManager.WEB.Models.Items.ItemToEditViewModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>

<h4>ItemToEditDto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" id="addItemForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.CollectionId)

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            @for (int i = 0; i < Model.CustomFields.Count; i++)
            {
                @Html.HiddenFor(x => x.CustomFields[i].CustomFieldId)
                @Html.HiddenFor(x => x.CustomFields[i].Name)
                @Html.HiddenFor(x => x.CustomFields[i].Type)
                @Html.HiddenFor(x => x.CustomFields[i].Id)
                @Html.HiddenFor(x => x.CustomFields[i].ItemId)

                <div class="form-group">
                    <label asp-for="@Model.CustomFields[i]" class="control-label">@Model.CustomFields[i].Name</label>

                    @switch (Model.CustomFields[i].Type)
                    {
                        case CustomPropertyType.DateTime:
                            <input asp-for="@Model.CustomFields[i].Value" type="datetime-local" class="form-control" />
                            break;

                        case CustomPropertyType.Bool:
                            <input asp-for="@Model.CustomFields[i].Value" type="checkbox" class="form-control" />
                            break;

                        default:
                            <input asp-for="@Model.CustomFields[i].Value" class="form-control" />
                            break;
                    }

                    <span asp-validation-for="@Model.CustomFields[i].Value" class="text-danger"></span>
                </div>
            }

            <dl class="row">
                <dt class="col-sm-2">
                    Tags:
                </dt>
                <dd class="col-sm-10">
                    <span id="tagsRow"></span>
                </dd>
            </dl>

            <div class="form-group" id="tagInputBlock">
                <input type="text" id="tagInput" class="form-control" autocomplete="off" placeholder="Type a tag..." />

                <button type="button" id="addTagButton" class="btn btn-secondary" style="margin-top: 10px;">Add tag</button>

                <div class="tags-list-block">
                    <ul class="tags-ul" id="tagsList">
                    </ul>
                </div>
            </div>

            <table class="table table-striped">
                <thead>
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        Remove
                    </th>
                </tr>
                </thead>
                <tbody>
                @for (int i = 0; i < Model.ExistedTags.Count; i++)
                {
                    @Html.HiddenFor(x => Model.ExistedTags[i].Name)
                    <tr>
                        <td>
                            @Html.DisplayFor(x => Model.ExistedTags[i].Name)
                        </td>
                        <td>
                            @Html.CheckBoxFor(x => Model.ExistedTags[i].ToRemove)
                        </td>
                    </tr>
                }
                </tbody>
            </table>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<script src="~/js/TagsScript.js" asp-append-version="true"></script>
</body>
</html>

