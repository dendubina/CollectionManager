@using CollectionsManager.DAL.Constants
@model CollectionsManager.BLL.DTO.Items.ItemToCreate

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Add Item To Collection</title>
</head>
<body>

    <div class="text-center"><h4>Create Item</h4></div>
    <div class="row justify-content-center">
        <div class="col-md-6">

            <form asp-action="AddItemToCollection" id="addItemForm">
                @Html.HiddenFor(x => x.CollectionId)

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" autocomplete="off" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                @{
                    for (int i = 0; i < Model.CustomFieldValuesToCreate.Count; i++)
                    {
                        @Html.HiddenFor(x => x.CustomFieldValuesToCreate[i].CustomFieldId)
                        @Html.HiddenFor(x => x.CustomFieldValuesToCreate[i].Type)

                        <div class="form-group">
                            @Html.DisplayFor(x => x.CustomFieldValuesToCreate[i].Name)

                            @switch (Model.CustomFieldValuesToCreate[i].Type)
                            {
                                case CustomPropertyType.DateTime:
                                    <input asp-for="@Model.CustomFieldValuesToCreate[i].Value" type="datetime-local" class="form-control" />break;

                                case CustomPropertyType.Bool:
                                    <br/><input asp-for="@Model.CustomFieldValuesToCreate[i].Value" type="checkbox" class="form-check-input" />break;

                                default:
                                    <input asp-for="@Model.CustomFieldValuesToCreate[i].Value" autocomplete="off" class="form-control" />break;
                            }
                            @Html.ValidationMessageFor(x => x.CustomFieldValuesToCreate[i].Value)
                        </div>
                    }
                }

                <div class="form-group">
                    <dl class="row">
                        <dt class="col-sm-2">
                            Tags:
                        </dt>
                        <dd class="col-sm-10">
                            <span id="tagsRow"></span>
                        </dd>
                    </dl>
                </div>

                <div class="form-group" id="tagInputBlock">
                    <input type="text" id="tagInput" class="form-control" autocomplete="off" placeholder="Type a tag..." />

                    <button type="button" id="addTagButton" class="btn btn-secondary" style="margin-top: 10px;">Add tag</button>

                    <div class="tags-list-block">
                        <ul class="tags-ul" id="tagsList">
                        </ul>
                    </div>
                </div>

                <div class="form-group text-center">
                    <input type="submit" value="Create" class="btn btn-primary" style="padding-left: 30px; padding-right: 30px" />
                </div>
            </form>
        </div>
    </div>
    <script src="~/js/TagsScript.js" asp-append-version="true"></script>
</body>
</html>
